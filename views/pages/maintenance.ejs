<% layout("/layouts/boilerplate") %>
<div class="action-page">
  <% include ../partials/profileHeader %>
  <section class="tasks__page-grid">
    <div class="page-header">
      <h2>Maintenance Overview</h2>
      <span class="link modal-trigger" id="help-trigger"
        >help <i class="far fa-question-circle"></i
      ></span>
    </div>
    <div class="tasks__task-box">
      <!-- prettier-ignore -->
      <%  if (profile.tasks) { %> 
        <%  for (const [index, task] of profile.tasks.entries()) { %>
            <% include ../partials/task %> 
        <% } } %>
      <% if (!profile.tasks || !profile.tasks.length) { %>
      <p class="empty-collection-msg">
        No maintenance tasks created yet. Click below to create one.
      </p>
      <% } %>
    </div>
    <div class="modal-trigger">
      <h3 class="btn btn-primary btn-fw mb-sm py-xs" id="form-trigger">
        Add New Maintenance Task?
      </h3>
    </div>
  </section>
  <!-- Modal help -->
  <div class="modal" id="help-modal">
    <span class="close" id="help-close">&times;</span>
    <h3 class="form-header">Maintenance Overview Help</h3>
    <div class="modal-form-contents">
      <div class="modal-help-window">
        <section class="help-list">
          <p>
            This page shows all currently tracked maintenance tasks, ordered by
            hours remaining:
            <span class="col-good">3.1 and greater</span>,
            <span class="col-caution">between 1.6 and 3</span>,
            <span class="col-danger">less than 1.5</span>.
          </p>
          <p>
            A maintenance task has a title/description, an interval (tracked by
            engine hours), and a last completed time. If you perform certain
            tasks at intervals related to other tasks, for example changing the
            oil filter every other oil change, simply double the oil change
            interval for the filter change.
          </p>
          <p>
            Select the
            <span class="btn-fake">Add New Maintenance Task?</span> button at
            the bottom of the screen to create a new task.
          </p>
          <p>
            Within the <span class="highlight btn-fake">Sign Off</span> pane,
            set the hourmeter reading when the task is/was completed and select
            the check mark
            <span class="highlight"><i class="far fa-check-square"></i></span>
            to sign off the relevant task.
          </p>
          <p>
            Within the <span class="highlight btn-fake">Edit Task</span> pane,
            make any desired changes to the the relevant task and select
            <span class="btn-fake">SUBMIT EDITS</span> button.
          </p>
          <p>
            Select the
            <span class="btn-fake-danger"><i class="fas fa-trash"></i></span>
            button in the task tab to permanently delete the relevant task.
          </p>
          <p>Profile buttons:</p>
          <p>
            <span class="btn-fake">pre-ride</span>
            <span class="highlight"><i class="fas fa-chevron-right"></i></span>
            pre-ride inspections page
          </p>
          <p>
            <span class="btn-fake">post-ride</span>
            <span class="highlight"><i class="fas fa-chevron-right"></i></span>
            update engine hours after a ride-day.
          </p>
          <p>
            <span class="btn-fake">maintenance</span>
            <span class="highlight"><i class="fas fa-chevron-right"></i></span>
            create maintenance tasks to track.
          </p>
          <p>
            <span class="btn-fake">notes</span>
            <span class="highlight"><i class="fas fa-chevron-right"></i></span>
            record notes, torques, specs, maintenance steps...
          </p>
        </section>
      </div>
    </div>
  </div>
  <!-- Modal Form -->
  <div class="modal" id="form-modal">
    <span class="close" id="form-close">&times;</span>
    <form
      action="/home/<%=currentUser.username%>/profiles/<%=profile._id%>/maintenance"
      method="POST"
      class="modal-form"
      autocomplete="off"
    >
      <h3 class="form-header">Create New Task</h3>
      <div class="modal-form-contents">
        <div class="modal-form-window">
          <div class="modal-form-items">
            <div class="modal-form-line">
              <label for="title" class="modal-form-label"
                >Title / Description</label
              >
              <input
                type="text"
                class="modal-form-input"
                id="title"
                name="task[title]"
                placeholder="Task description"
                required
              />
            </div>
            <div class="modal-form-line">
              <label for="interval" class="modal-form-label"
                >Maintenance Interval (hrs):
              </label>
              <input
                type="number"
                class="modal-form-input"
                step=".1"
                id="interval"
                name="task[interval]"
                placeholder="e.g 7.5"
                required
              />
            </div>
            <div class="modal-form-line">
              <label for="lastDoneAt" class="modal-form-label"
                >Last completed at (hrs):
              </label>
              <input
                type="number"
                class="modal-form-input"
                step=".1"
                id="lastDoneAt"
                name="task[lastCompletedAt]"
                placeholder="e.g. 7.5"
                required
              />
            </div>
          </div>
          <button class="btn btn-primary btn-fw py-xs">Create Task</button>
        </div>
      </div>
    </form>
  </div>
</div>
<script>
  // Clear inputs on focus
  document.querySelectorAll("input").forEach((input) => {
    input.addEventListener("focus", function () {
      this.value = "";
    });
  });

  // Confirm deletion script
  function deleteConfirmation() {
    return confirm("Are you sure? This action is irreversible...");
  }

  // Modal display script
  const formModal = document.getElementById("form-modal");
  const helpModal = document.getElementById("help-modal");
  const triggers = document.querySelectorAll(".modal-trigger");
  const closers = document.querySelectorAll(".close");
  // Display
  for (const trigger of triggers) {
    trigger.onclick = function (event) {
      switch (event.target.id) {
        case "form-trigger":
          formModal.style.display = "block";
          break;
        case "help-trigger":
          helpModal.style.display = "block";
          break;
      }
    };
  }
  // Hide
  for (const close of closers) {
    close.onclick = function (event) {
      switch (event.target.id) {
        case "form-close":
          formModal.style.display = "none";
          break;
        case "help-close":
          helpModal.style.display = "none";
          break;
      }
    };
  }
</script>
